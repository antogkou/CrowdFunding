@model CrowdFundingMVC.ViewModels.SingleProjectMV
@using Microsoft.AspNetCore.Identity
@inject UserManager<CrowdFundingCore.Models.MyUsers> UserManager

@{
    string creationdateString = String.Format("{0:dd/MM/yyyy}", Model.Project.ProjectCreationDate);
    string endingdateString = String.Format("{0:dd/MM/yyyy}", Model.Project.ProjectEndingDate);
    var progress = Math.Round((Model.Project.ProjectCurrentAmount * 100) / Model.Project.ProjectTargetAmount, 2)
        .ToString(System.Globalization.CultureInfo.InvariantCulture);
    var levelCounter = 0;
   // var pledgeTotal = Math.Round((Model.PledgeUsers.Count * Model.Pledges.Count ));
}

<main>
    <div class="row justify-content-end">
        @if (@UserManager.FindByNameAsync(UserManager.GetUserName(User)).Result.Id == @Model.Project.UserId)
        {
            <div class="mr-2">
                <button type="button" class="btn btn-primary" onclick="addPledge(@Model.Project.ProjectId)">Add Pledge</button>
            </div>
            <div>
                <button type="button" class="btn btn-warning" onclick="editProject(@Model.Project.ProjectId)">Edit Project</button>
            </div>
        }

    </div>
    <div class=row>
        <div class="container-fluid border shadow p-3 mb-4 bg-white rounded">
            <div class="row">
                <div class="col-md-12">
                    <div class="row">
                        <div class="col-md-6 text-center">

                            @if (Model.ProjectMultimedia.Last().MultimediaURL
                               != null && Model.ProjectMultimedia.Last().MultimediaURL != "")
                            {
                                <img class="img-fluid single-project-cover" src="@Url.Content(Model.ProjectMultimedia.Last().MultimediaURL)"
                                     style="max-width:100%; height:auto; max-height: 350px; min-height: 350px;" />
                            }
                            else
                            {
                                <img class="img-fluid single-project-cover" src="~/img/coverproject.png"
                                     style="max-width:100%; Project Image" height:auto; max-height: 350px; min-height: 350px;" />
                            }


                        </div>
                        <div class="col-md-6">
                            <h3 class="text-center font-weight-bold">
                                @Model.Project.ProjectTitle
                            </h3>
                            <div class="text-left">
                                <small>@Model.Project.ProjectDescription</small>
                            </div>
                            <div id="stickBottom" class="position-absolute fixed-bottom mx-3">
                                <div>
                                    <span class="font-weight-bold">Creator: </span><span>@Model.Project.ProjectCreator</span>
                                </div>
                                <div>
                                    <span class="font-weight-bold">Started: </span><span>@creationdateString</span>
                                </div>
                                <div>
                                    <span class="font-weight-bold">Ending: </span><span>@endingdateString</span>
                                </div>
                                <div>
                                    <span class="font-weight-bold">Current Amount: </span>
                                    <span>@Model.Project.ProjectCurrentAmount / @Model.Project.ProjectTargetAmount €</span>
                                </div>
                                <div class="progress">
                                    <div class="progress-bar font-weight-bolder text-dark progress-bar-animated progress-bar-striped
                                     bg-success text-center"
                                         role="progressbar"
                                         style="width: @progress%"
                                         aria-valuenow="@progress"
                                         aria-valuemin="0"
                                         aria-valuemax="100">
                                        @progress% funded
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (Model.Pledges.Count > 0)
    {
        <div class=row>
            <div class="container-fluid border shadow p-3 mb-4 bg-white rounded">
                <div class="card-deck mb-3 text-center justify-content-center">


                    @foreach (var item in Model.Pledges.OrderBy(c => c.PledgePrice).ToList())
                    {
                        <div class="col-md-3 card mb-4 box-shadow">
                            <div class="card-header">
                                <button type="button" class="close" aria-label="Close" onclick="deletePledge(@item.PledgeId)">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                                @*<h4 class="my-0 font-weight-normal">@Html.DisplayFor(modelItem => item.PledgeTitle)</h4>*@
                                <h4 class="my-0 font-weight-normal">Level @(++levelCounter) Pledge</h4>
                            </div>
                            <div class="card-body">
                                <h1 class="card-title pricing-card-title">
                                    <ccc title="$0" class="ccc--converted"
                                         style="font-size: inherit; display: inline; color: inherit; --darkreader-inline-color: inherit;"
                                         data-darkreader-inline-color="">@Html.DisplayFor(modelItem => item.PledgePrice) €</ccc>
                                    </h1>
                                    <ul class="list-unstyled mt-3 mb-4">
                                        <li>@Html.DisplayFor(modelItem => item.PledgeDescription)</li>

                                        <li>You get a reward for being cool!</li>

                                        <li>@Html.DisplayFor(modelItem => item.PledgeReward)</li>
                                    </ul>

                                    <button type="button" class="btn btn-primary btn-lg" onclick="submitBuyPledgeToServer(@Model.Project.ProjectId, @item.PledgeId)">Get Pledge</button>
                                    <p></p>
                                    <button type="button" class="btn btn-warning btn-lg" onclick="editPledge(@Model.Project.ProjectId , @item.PledgeId)">Edit Pledge</button>
                                </div>
                            </div>
                        }
                </div>

                <table class="customers table table-striped">
                    <thead>
                        <tr>
                            <th scope="col">Pledge Buy Count</th>
                            <th scope="col">Pledge Title</th>
                            <th scope="col">Price</th>
                            <th scope="col">Reward</th>
                            <th scope="col">Created Date</th>
                            <th scope="col">Total per Pledge</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var c in Model.PledgeUsers)
                        {
                            <tr>
                                <th scope="row">@c.PledgeUsers.Count</th>
                                <td>@c.PledgeTitle</td>
                                <td>@c.PledgePrice</td>
                                <td>@c.PledgeReward</td>
                                <td>@c.PledgeDateCreated.DateTime.ToLongDateString()</td>
                                <td>@Math.Round(@c.PledgePrice * @c.PledgeUsers.Count)€</td>
                            </tr>
                        }
                    </tbody>
                </table>
                <h5>Total Pledges: @Model.Pledges.Count()</h5>
                <h5>Total Users: Users Count (not working)</h5>
            </div>
        </div>
    }

    <div class="row">
        <div class="container-fluid border shadow p-3 mb-4 bg-white rounded">
            @if (@UserManager.FindByNameAsync(UserManager.GetUserName(User)).Result.Id == @Model.Project.UserId)
            {
                <div class="shadow mb-5 bg-white rounded">
                    <textarea type="text" class="form-control text-wrap"
                              placeholder="What's on your mind?"
                              id="PostDescription"
                              style="resize: vertical; min-height: 70px;"></textarea>
                    <input type="button" class="btn btn-dark form-control" onclick="submitPostToServer(@Model.Project.ProjectId)" value="Post">
                </div>
            }
            <div>
                <h6 class="border-bottom border-gray pb-2 mb-0 text-center font-weight-bold font-italic">Recent updates</h6>
                @foreach (var item in Model.Posts.OrderByDescending(c => c.PostDateCreated).ToList())
                {
                    <div class="media text-muted">
                        <img data-src="holder.js/32x32?theme=thumb&amp;bg=007bff&amp;fg=007bff&amp;size=1" alt="32x32" class="mr-2 rounded" style="width: 32px; height: 32px;" src="~/img/blue32.jpg" data-holder-rendered="true">
                        <p class="media-body pb-3 mb-0 small lh-125 border-bottom border-gray">
                            <strong class="d-block text-gray-dark">@Model.Project.ProjectCreator · @item.PostDateCreated.DateTime</strong>
                            @Html.DisplayFor(modelItem => item.PostDescription)
                        </p>
                        @if (@UserManager.FindByNameAsync(UserManager.GetUserName(User)).Result.Id == @Model.Project.UserId
                 && item.UserId != null)
                        {
                            <small class="d-block text-right mt-0">
                                @*<a href="Url.Action("EditPost", new { id = item.PostId})">Edit</a>*@
                                <button type="button" class="btn btn-primary btn-sm mr-1" onclick="editPost(@Model.Project.ProjectId , @item.PostId)">Edit</button>
                            </small>
                            <small class="d-block text-right mt-0">
                                @*<a href="#">Delete</a>*@
                                @*<button type="button" class="btn btn-danger btn-sm" onclick="deletePostFromServer(@Model.Project.ProjectId , @item.PostId)">Delete</button>*@
                                <button type="button" class="btn btn-danger btn-sm" onclick="deletePost(@item.PostId)">X</button>
                            </small>
                        }
                    </div>
                }
            </div>
        </div>
    </div>



</main>

