@model CrowdFundingMVC.ViewModels.EditProjectVM


@{
    ViewData["Title"] = "EditProject";
}

<h2>Edit</h2>

<h4>Project</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="EditProject">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="@Model.Project.ProjectId" id="ProjectId"/>
            <div class="form-group">
                <label asp-for="@Model.Project.ProjectTitle" class="control-label"></label>
                <input asp-for="@Model.Project.ProjectTitle" class="form-control" id="ProjectTitle"/>
                <span asp-validation-for="@Model.Project.ProjectTitle" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.Project.ProjectDescription" class="control-label"></label>
                <input asp-for="@Model.Project.ProjectDescription" class="form-control" id="ProjectDescription"/>
                <span asp-validation-for="@Model.Project.ProjectDescription" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.Project.ProjectTargetAmount" class="control-label"></label>
                @*<input asp-for="@Model.Project.ProjectTargetAmount" value="@Model.Project.ProjectTargetAmount" class="form-control" type="number" id="ProjectTargetAmount" />
                <input type="number" value="@(Model.Project.ProjectTargetAmount.ToString("N2"))" name="@Html.NameFor(m => m.Project.ProjectTargetAmount)" />*@
                <input class="form-control" data-val="true" data-val-required="Field is required" 
                       value="@(Model.Project.ProjectTargetAmount.ToString("N2", System.Globalization.CultureInfo.InvariantCulture))"  
                       name="@Html.NameFor(m => m.Project.ProjectTargetAmount)" id="ProjectTargetAmount" />
                <span asp-validation-for="@Model.Project.ProjectTargetAmount" class="text-danger"></span>
            </div>
            <div class="form-group">

                <div class="checkbox">
                    <label>
                        <input type="checkbox" asp-for="@Model.Project.IsActive" id="IsActive"/> @Html.DisplayNameFor(model => model.Project.IsActive)
                    </label>
                </div>
            </div>
            <div class="form-group">
                <div class="checkbox">

                    <label>
                        <input type="checkbox" asp-for="@Model.Project.IsComplete" id="IsComplete"/> @Html.DisplayNameFor(model => model.Project.IsComplete)

                    </label>
                </div>
            </div>

            @*@Html.CheckBox("isActive", new { value = Model.IsActive, @checked = Model.IsActive });

            @Html.CheckBox("isActive", new { value = Model.IsComplete, @checked = Model.IsComplete });*@


            <div class="form-group">
                <label asp-for="@Model.Project.ProjectEndingDate" class="control-label"></label>
                <input asp-for="@Model.Project.ProjectEndingDate" class="form-control" id="ProjectEndingDate"/>
                <span asp-validation-for="@Model.Project.ProjectEndingDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                @*<label asp-for="@Model.Project.ProjectCategory" class="control-label"></label>
                <select asp-for="ProjectCategory" class="form-control" asp-items="ViewBag.ProjectCategory"></select>
                <input asp-for="@Model.Project.ProjectCategory" class="form-control" id="ProjectCategory" />
                <span asp-validation-for="@Model.Project.ProjectCategory" class="text-danger"></span>*@

                <div class="form-group">
                    <label asp-for="@Model.Project.ProjectCategory" class="control-label"></label>
                    <select name="@Model.Project.ProjectCategory" class="form-control" id="ProjectCategory">
                        @{
                            var categories = Enum.GetValues(
                                typeof(CrowdFundingCore.Models.ProjectCategory))
                                .Cast<CrowdFundingCore.Models.ProjectCategory>();
                            <option value="@Model.Project.ProjectCategory.ToString()" selected>@Model.Project.ProjectCategory.ToString()</option>
                            foreach (var category in categories)
                            {
                                <option  value="@category">@category</option>
                            }
                        }
                    </select>
                    <span asp-validation-for="@Model.Project.ProjectCategory" class="text-danger"></span>
                </div>

            </div>
            <div class="form-group">
                @*<input type="button" value="Submit" onclick="doUpdateProject(@Model.ProjectId)" class="btn btn-default" />*@
                <input type="button" value="Submit" onclick="doUpdateProject(@Model.Project.ProjectId)">
            </div>
        </form>
    </div>
</div>
<div>
    <a asp-action="GetMyProjects">Back to List</a>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}