@model CrowdFundingCore.Models.Project


@{
    ViewData["Title"] = "EditProject";
}

<h2>Edit</h2>

<h4>Project</h4>
<hr />
<div class="row">
    <div class="col-md-9">
        <form asp-action="EditProject">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="@Model.ProjectId" id="ProjectId" />
            <div class="form-group">
                <label asp-for="@Model.ProjectTitle" class="control-label"></label>
                <input asp-for="@Model.ProjectTitle" class="form-control" id="ProjectTitle" />
                <span asp-validation-for="@Model.ProjectTitle" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.ProjectDescription" class="control-label"></label>
                <textarea asp-for="@Model.ProjectDescription" class="form-control textarea text-wrap"
                          style="resize: vertical; min-height: 70px;"
                          id="ProjectDescription"></textarea>
                <span asp-validation-for="@Model.ProjectDescription" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.ProjectTargetAmount" class="control-label"></label>
                <input class="form-control" data-val="true" data-val-required="Field is required"
                       value="@(Model.ProjectTargetAmount.ToString("N2", System.Globalization.CultureInfo.InvariantCulture))"
                       name="@Html.NameFor(m => m.ProjectTargetAmount)" id="ProjectTargetAmount" min="0" />
                <span asp-validation-for="@Model.ProjectTargetAmount" class="text-danger"></span>
            </div>
            <div class="form-group">

                <div class="checkbox">
                    <label>
                        <input type="checkbox" asp-for="@Model.IsActive" id="IsActive" /> @Html.DisplayNameFor(model => model.IsActive)
                    </label>
                </div>
            </div>
            <div class="form-group">
                <div class="checkbox">

                    <label>
                        <input type="checkbox" asp-for="@Model.IsComplete" id="IsComplete" /> @Html.DisplayNameFor(model => model.IsComplete)

                    </label>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="@Model.ProjectEndingDate" class="control-label"></label>
                <input asp-for="@Model.ProjectEndingDate" class="form-control" id="ProjectEndingDate" />
                <span asp-validation-for="@Model.ProjectEndingDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div class="form-group">
                    <label asp-for="@Model.ProjectCategory" class="control-label"></label>
                    <select name="@Model.ProjectCategory" class="form-control" id="ProjectCategory">
                        @{
                            var categories = Enum.GetValues(
                                typeof(CrowdFundingCore.Models.ProjectCategory))
                                .Cast<CrowdFundingCore.Models.ProjectCategory>();
                            <option value="@Model.ProjectCategory.ToString()" selected>@Model.ProjectCategory.ToString()</option>
                            foreach (var category in categories)
                            {
                                <option value="@category">@category</option>
                            }
                        }
                    </select>
                    <span asp-validation-for="@Model.ProjectCategory" class="text-danger"></span>
                </div>

            </div>
            
            <div class="form-group">
                <a asp-action="SingleProject" asp-route-id="@Model.ProjectId" asp-controller="Project" class="btn btn-danger float-left">Cancel</a>
                <input type="button" class="btn btn-success float-right" value="Submit" onclick="doUpdateProject(@Model.ProjectId)">

            </div>
        </form>
    </div>
</div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}